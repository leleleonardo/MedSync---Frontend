{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Documents\\\\ADS\\\\TG\\\\MedSync---Frontend\\\\src\\\\context\\\\DrawerContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useCallback, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DrawerContext = /*#__PURE__*/createContext();\nexport const useDrawerContext = () => {\n  _s();\n  return useContext(DrawerContext);\n};\n_s(useDrawerContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default function DrawerProvider({\n  children\n}) {\n  _s2();\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const toggleDrawerOpen = useCallback(() => {\n    setIsDrawerOpen(oldDrawerOpen => !oldDrawerOpen);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DrawerContext.Provider, {\n    value: {\n      isDrawerOpen,\n      toggleDrawerOpen\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s2(DrawerProvider, \"usbNxusHfoqO/L8FvBLgG0MWi2g=\");\n_c = DrawerProvider;\nvar _c;\n$RefreshReg$(_c, \"DrawerProvider\");","map":{"version":3,"names":["createContext","useCallback","useContext","useState","jsxDEV","_jsxDEV","DrawerContext","useDrawerContext","_s","DrawerProvider","children","_s2","isDrawerOpen","setIsDrawerOpen","toggleDrawerOpen","oldDrawerOpen","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lucas/Documents/ADS/TG/MedSync---Frontend/src/context/DrawerContext.jsx"],"sourcesContent":["import { createContext, useCallback, useContext, useState } from 'react'\r\n\r\nconst DrawerContext = createContext()\r\n\r\nexport const useDrawerContext = () => {\r\n    return useContext(DrawerContext)\r\n}\r\n\r\nexport default function DrawerProvider({ children }) {\r\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false)\r\n\r\n    const toggleDrawerOpen = useCallback(() => {\r\n        setIsDrawerOpen(oldDrawerOpen => !oldDrawerOpen)\r\n    }, [])\r\n\r\n    return (\r\n        <DrawerContext.Provider value={{ isDrawerOpen, toggleDrawerOpen }}>\r\n            {children}\r\n        </DrawerContext.Provider>\r\n    )\r\n}"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExE,MAAMC,aAAa,gBAAGN,aAAa,CAAC,CAAC;AAErC,OAAO,MAAMO,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,OAAON,UAAU,CAACI,aAAa,CAAC;AACpC,CAAC;AAAAE,EAAA,CAFYD,gBAAgB;AAI7B,eAAe,SAASE,cAAcA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACjD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMW,gBAAgB,GAAGb,WAAW,CAAC,MAAM;IACvCY,eAAe,CAACE,aAAa,IAAI,CAACA,aAAa,CAAC;EACpD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIV,OAAA,CAACC,aAAa,CAACU,QAAQ;IAACC,KAAK,EAAE;MAAEL,YAAY;MAAEE;IAAiB,CAAE;IAAAJ,QAAA,EAC7DA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEjC;AAACV,GAAA,CAZuBF,cAAc;AAAAa,EAAA,GAAdb,cAAc;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}