{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Documents\\\\ADS\\\\TG\\\\MedSync---Frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useEffect, useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { api, createSession } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuthContext = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuthContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default function AuthProvider({\n  children\n}) {\n  _s2();\n  const navigate = useNavigate();\n  const [usuario, setUsuario] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const recoveredUsuario = localStorage.getItem('usuario');\n    const token = localStorage.getItem('token');\n    if (recoveredUsuario && token) {\n      setUsuario(JSON.parse(recoveredUsuario));\n      api.defaults.headers.Authorization = `Bearer ${token}`;\n    }\n    setLoading(false);\n  }, []);\n  async function login(email, senha) {\n    try {\n      const res = await createSession(email, senha);\n      const usuarioLogado = res.data;\n      const accessToken = res.data.accessToken;\n      localStorage.setItem('usuario', JSON.stringify(usuarioLogado));\n      localStorage.setItem('token', accessToken);\n      api.defaults.headers.Authorization = `Bearer ${accessToken}`;\n      setUsuario(usuarioLogado);\n\n      /*const result = await api.get(`/medico/verifyapproval/${email}`)\r\n      if(result.data.aguardando_validacao != null){\r\n          alert('Usuário Aguardando Aprovação, Você será notificado quando seu acesso for liberado!')\r\n          logout()\r\n      }*/\n\n      navigate('/inicio');\n    } catch (err) {\n      console.error(\"ops! ocorreu um erro\" + err);\n      alert('Usuário e/ou Senha Incorreto(s)!');\n    }\n  }\n  function logout() {\n    localStorage.removeItem('token');\n    api.defaults.headers.Authorization = null;\n    setUsuario(null);\n    navigate('/');\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authenticated: !!usuario,\n      usuario,\n      loading,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s2(AuthProvider, \"GuYpFtBn/pig6T2X4Byxrxgp3mc=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useEffect","useContext","useState","useNavigate","api","createSession","jsxDEV","_jsxDEV","AuthContext","useAuthContext","_s","AuthProvider","children","_s2","navigate","usuario","setUsuario","loading","setLoading","recoveredUsuario","localStorage","getItem","token","JSON","parse","defaults","headers","Authorization","login","email","senha","res","usuarioLogado","data","accessToken","setItem","stringify","err","console","error","alert","logout","removeItem","Provider","value","authenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lucas/Documents/ADS/TG/MedSync---Frontend/src/context/AuthContext.jsx"],"sourcesContent":["import { createContext, useEffect, useContext, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { api, createSession } from '../services/api'\r\n\r\nconst AuthContext = createContext()\r\n\r\nexport const useAuthContext = () => {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport default function AuthProvider({ children }) {\r\n    const navigate = useNavigate()\r\n    const [usuario, setUsuario] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const recoveredUsuario = localStorage.getItem('usuario')\r\n        const token = localStorage.getItem('token')\r\n\r\n        if (recoveredUsuario && token) {\r\n            setUsuario(JSON.parse(recoveredUsuario))\r\n            api.defaults.headers.Authorization = `Bearer ${token}`\r\n        }\r\n\r\n        setLoading(false)\r\n    }, [])\r\n\r\n    async function login(email, senha) {\r\n        try {\r\n            const res = await createSession(email, senha)\r\n\r\n            const usuarioLogado = res.data\r\n            const accessToken = res.data.accessToken\r\n\r\n            localStorage.setItem('usuario', JSON.stringify(usuarioLogado))\r\n            localStorage.setItem('token', accessToken)\r\n\r\n            api.defaults.headers.Authorization = `Bearer ${accessToken}`\r\n            \r\n            setUsuario(usuarioLogado)\r\n\r\n            /*const result = await api.get(`/medico/verifyapproval/${email}`)\r\n            if(result.data.aguardando_validacao != null){\r\n                alert('Usuário Aguardando Aprovação, Você será notificado quando seu acesso for liberado!')\r\n                logout()\r\n            }*/\r\n\r\n            navigate('/inicio')\r\n        } catch (err) {\r\n            console.error(\"ops! ocorreu um erro\" + err)\r\n            alert('Usuário e/ou Senha Incorreto(s)!')\r\n        }\r\n    }\r\n\r\n    function logout(){\r\n        localStorage.removeItem('token')\r\n        api.defaults.headers.Authorization = null\r\n        setUsuario(null)\r\n        navigate('/')\r\n    }  \r\n\r\n    return (\r\n        <AuthContext.Provider value={{ authenticated: !!usuario, usuario, loading, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACtE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,GAAG,EAAEC,aAAa,QAAQ,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,WAAW,gBAAGT,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMU,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,OAAOT,UAAU,CAACO,WAAW,CAAC;AAClC,CAAC;AAAAE,EAAA,CAFYD,cAAc;AAI3B,eAAe,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EAC/C,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5CF,SAAS,CAAC,MAAM;IACZ,MAAMmB,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IACxD,MAAMC,KAAK,GAAGF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAIF,gBAAgB,IAAIG,KAAK,EAAE;MAC3BN,UAAU,CAACO,IAAI,CAACC,KAAK,CAACL,gBAAgB,CAAC,CAAC;MACxCf,GAAG,CAACqB,QAAQ,CAACC,OAAO,CAACC,aAAa,GAAG,UAAUL,KAAK,EAAE;IAC1D;IAEAJ,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeU,KAAKA,CAACC,KAAK,EAAEC,KAAK,EAAE;IAC/B,IAAI;MACA,MAAMC,GAAG,GAAG,MAAM1B,aAAa,CAACwB,KAAK,EAAEC,KAAK,CAAC;MAE7C,MAAME,aAAa,GAAGD,GAAG,CAACE,IAAI;MAC9B,MAAMC,WAAW,GAAGH,GAAG,CAACE,IAAI,CAACC,WAAW;MAExCd,YAAY,CAACe,OAAO,CAAC,SAAS,EAAEZ,IAAI,CAACa,SAAS,CAACJ,aAAa,CAAC,CAAC;MAC9DZ,YAAY,CAACe,OAAO,CAAC,OAAO,EAAED,WAAW,CAAC;MAE1C9B,GAAG,CAACqB,QAAQ,CAACC,OAAO,CAACC,aAAa,GAAG,UAAUO,WAAW,EAAE;MAE5DlB,UAAU,CAACgB,aAAa,CAAC;;MAEzB;AACZ;AACA;AACA;AACA;;MAEYlB,QAAQ,CAAC,SAAS,CAAC;IACvB,CAAC,CAAC,OAAOuB,GAAG,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,sBAAsB,GAAGF,GAAG,CAAC;MAC3CG,KAAK,CAAC,kCAAkC,CAAC;IAC7C;EACJ;EAEA,SAASC,MAAMA,CAAA,EAAE;IACbrB,YAAY,CAACsB,UAAU,CAAC,OAAO,CAAC;IAChCtC,GAAG,CAACqB,QAAQ,CAACC,OAAO,CAACC,aAAa,GAAG,IAAI;IACzCX,UAAU,CAAC,IAAI,CAAC;IAChBF,QAAQ,CAAC,GAAG,CAAC;EACjB;EAEA,oBACIP,OAAA,CAACC,WAAW,CAACmC,QAAQ;IAACC,KAAK,EAAE;MAAEC,aAAa,EAAE,CAAC,CAAC9B,OAAO;MAAEA,OAAO;MAAEE,OAAO;MAAEW,KAAK;MAAEa;IAAO,CAAE;IAAA7B,QAAA,EACtFA;EAAQ;IAAAkC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B;AAACpC,GAAA,CAxDuBF,YAAY;EAAA,QACfR,WAAW;AAAA;AAAA+C,EAAA,GADRvC,YAAY;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}