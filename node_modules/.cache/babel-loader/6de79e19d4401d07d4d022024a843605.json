{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\nvar isSupersetOf = require('../internals/set-is-superset-of');\nvar setMethodAcceptSetLike = require('../internals/set-method-accept-set-like');\nvar INCORRECT = !setMethodAcceptSetLike('isSupersetOf', function (result) {\n  return !result;\n});\n\n// `Set.prototype.isSupersetOf` method\n// https://tc39.es/ecma262/#sec-set.prototype.issupersetof\n$({\n  target: 'Set',\n  proto: true,\n  real: true,\n  forced: INCORRECT\n}, {\n  isSupersetOf: isSupersetOf\n});","map":{"version":3,"names":["$","require","isSupersetOf","setMethodAcceptSetLike","INCORRECT","result","target","proto","real","forced"],"sources":["C:/Users/lucas/Documents/ADS/TG/MedSync---Frontend/node_modules/core-js-pure/modules/es.set.is-superset-of.v2.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar isSupersetOf = require('../internals/set-is-superset-of');\nvar setMethodAcceptSetLike = require('../internals/set-method-accept-set-like');\n\nvar INCORRECT = !setMethodAcceptSetLike('isSupersetOf', function (result) {\n  return !result;\n});\n\n// `Set.prototype.isSupersetOf` method\n// https://tc39.es/ecma262/#sec-set.prototype.issupersetof\n$({ target: 'Set', proto: true, real: true, forced: INCORRECT }, {\n  isSupersetOf: isSupersetOf\n});\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACtC,IAAIC,YAAY,GAAGD,OAAO,CAAC,iCAAiC,CAAC;AAC7D,IAAIE,sBAAsB,GAAGF,OAAO,CAAC,yCAAyC,CAAC;AAE/E,IAAIG,SAAS,GAAG,CAACD,sBAAsB,CAAC,cAAc,EAAE,UAAUE,MAAM,EAAE;EACxE,OAAO,CAACA,MAAM;AAChB,CAAC,CAAC;;AAEF;AACA;AACAL,CAAC,CAAC;EAAEM,MAAM,EAAE,KAAK;EAAEC,KAAK,EAAE,IAAI;EAAEC,IAAI,EAAE,IAAI;EAAEC,MAAM,EAAEL;AAAU,CAAC,EAAE;EAC/DF,YAAY,EAAEA;AAChB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}