{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Documents\\\\ADS\\\\TG\\\\MedSync---Frontend\\\\src\\\\components\\\\ReactBigCalendar\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo, useEffect } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport 'moment/locale/pt-br';\n// import events from \"./events\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport api from '../../services/api';\nimport CardConsulta from '../CardConsulta';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmoment.locale('pt-br');\nconst localizer = momentLocalizer(moment);\nexport default function ReactBigCalendar() {\n  _s();\n  const [eventsData, setEventsData] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n  useEffect(() => {\n    getAppointments();\n  }, []);\n  async function getAppointments() {\n    const response = await api.get(`/consultas/getMyAppointments/all`);\n    setAppointments(response.data);\n    const items = response.data;\n    const aux = [];\n    items.map(item => {\n      aux.push({\n        id: item.id,\n        id_especialidade: item.id_especialidade,\n        id_medico: item.id_medico,\n        id_paciente: item.id_paciente,\n        status: item.status,\n        dt_hr_consulta: item.dt_hr_consulta,\n        url_consulta: item.url_consulta,\n        start: moment(`${item.dt_hr_consulta}`)._d,\n        end: moment(`${item.dt_hr_consulta}`).add(1, 'h')._d,\n        title: `Consulta ${item.nome}`\n      });\n    });\n    setEventsData(aux);\n  }\n  setInterval(getAppointments, 60000);\n  const {\n    defaultDate,\n    formats\n  } = useMemo(() => ({\n    defaultDate: new Date(),\n    formats: {\n      weekdayFormat: (date, culture, localizer) => localizer.format(date, 'dddd', culture)\n    }\n  }), []);\n  function openModal(e) {\n    ReactDOM.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CardConsulta, {\n          id_consulta: e.id,\n          id_especialidade: e.id_especialidade,\n          id_medico: e.id_medico,\n          id_paciente: e.id_paciente,\n          status: e.status,\n          data: e.dt_hr_consulta,\n          url_consulta: e.url_consulta\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this));\n  }\n\n  // const handleSelect = ({ start, end }) => {\n  //   const title = window.prompt(\"New Event name\");\n  //   if (title)\n  //     setEventsData([\n  //       ...eventsData,\n  //       {\n  //         start,\n  //         end,\n  //         title\n  //       }\n  //     ]);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      views: [\"day\", \"agenda\", \"work_week\", \"month\"],\n      selectable: true,\n      localizer: localizer,\n      defaultDate: defaultDate,\n      defaultView: \"month\",\n      events: eventsData,\n      formats: formats,\n      style: {\n        height: \"70vh\",\n        width: \"100%\"\n      },\n      onSelectEvent: event => openModal(event)\n      // onSelectSlot={handleSelect}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(ReactBigCalendar, \"E9YxWFlzehNk9vOs49F9xRGAS+Y=\");\n_c = ReactBigCalendar;\nvar _c;\n$RefreshReg$(_c, \"ReactBigCalendar\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","ReactDOM","Calendar","momentLocalizer","moment","api","CardConsulta","jsxDEV","_jsxDEV","locale","localizer","ReactBigCalendar","_s","eventsData","setEventsData","appointments","setAppointments","getAppointments","response","get","data","items","aux","map","item","push","id","id_especialidade","id_medico","id_paciente","status","dt_hr_consulta","url_consulta","start","_d","end","add","title","nome","setInterval","defaultDate","formats","Date","weekdayFormat","date","culture","format","openModal","e","render","StrictMode","children","id_consulta","fileName","_jsxFileName","lineNumber","columnNumber","className","views","selectable","defaultView","events","style","height","width","onSelectEvent","event","_c","$RefreshReg$"],"sources":["C:/Users/lucas/Documents/ADS/TG/MedSync---Frontend/src/components/ReactBigCalendar/index.js"],"sourcesContent":["import React, { useState, useMemo, useEffect } from \"react\";\r\nimport ReactDOM from 'react-dom'\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport 'moment/locale/pt-br';\r\n// import events from \"./events\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport api from '../../services/api'\r\nimport CardConsulta from '../CardConsulta'\r\n\r\nmoment.locale('pt-br');\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport default function ReactBigCalendar() {\r\n  const [eventsData, setEventsData] = useState([]);\r\n  const [appointments, setAppointments] = useState([])\r\n\r\n  useEffect(() => {\r\n      getAppointments()\r\n  },[])\r\n\r\n  async function getAppointments(){\r\n    const response = await api.get(`/consultas/getMyAppointments/all`)\r\n    setAppointments(response.data)\r\n    const items = response.data\r\n    const aux = []\r\n    items.map(item => {\r\n      aux.push({\r\n        id: item.id,\r\n        id_especialidade: item.id_especialidade,\r\n        id_medico: item.id_medico,\r\n        id_paciente: item.id_paciente,\r\n        status: item.status,\r\n        dt_hr_consulta: item.dt_hr_consulta,\r\n        url_consulta: item.url_consulta,\r\n        start: moment(`${item.dt_hr_consulta}`)._d ,\r\n        end: moment(`${item.dt_hr_consulta}`).add(1, 'h')._d,\r\n        title: `Consulta ${item.nome}`\r\n      })\r\n    })\r\n    setEventsData(aux)\r\n  }\r\n\r\n  setInterval(getAppointments, 60000)\r\n\r\n  const { defaultDate, formats } = useMemo(\r\n    () => ({\r\n      defaultDate: new Date(),\r\n      formats: {\r\n        weekdayFormat: (date, culture, localizer) =>\r\n        localizer.format(date, 'dddd', culture),\r\n      },\r\n    }),\r\n    []\r\n  )\r\n\r\n  function openModal(e){\r\n    ReactDOM.render(\r\n      <React.StrictMode>\r\n        <div>\r\n          <CardConsulta id_consulta={e.id} id_especialidade={e.id_especialidade} id_medico={e.id_medico} id_paciente={e.id_paciente} status={e.status} data={e.dt_hr_consulta} url_consulta={e.url_consulta} />\r\n        </div>\r\n      </React.StrictMode>\r\n    )\r\n  }\r\n\r\n  // const handleSelect = ({ start, end }) => {\r\n  //   const title = window.prompt(\"New Event name\");\r\n  //   if (title)\r\n  //     setEventsData([\r\n  //       ...eventsData,\r\n  //       {\r\n  //         start,\r\n  //         end,\r\n  //         title\r\n  //       }\r\n  //     ]);\r\n  // };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Calendar\r\n        views={[\"day\", \"agenda\", \"work_week\", \"month\"]}\r\n        selectable\r\n        localizer={localizer}\r\n        defaultDate={defaultDate}\r\n        defaultView=\"month\"\r\n        events={eventsData}\r\n        formats={formats}\r\n        style={{ height: \"70vh\", width: \"100%\" }}\r\n        onSelectEvent={(event) => openModal(event)}\r\n        // onSelectSlot={handleSelect}\r\n      />\r\n\r\n\r\n      {/* CardConsulta({id_consulta, id_especialidade, id_medico, id_paciente, status, data, url_consulta}) */}\r\n      {/* <CardConsulta \r\n        style={{minWidth: '200px'}}\r\n        key={appointment.id} \r\n        id_consulta={appointment.id} \r\n        status={appointment.status} \r\n        id_especialidade={appointment.id_especialidade} \r\n        id_medico={appointment.id_medico} \r\n        id_paciente={appointment.id_paciente} \r\n        data={appointment.dt_hr_consulta}\r\n        url_consulta={appointment.url_consulta}\r\n      /> */}\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}